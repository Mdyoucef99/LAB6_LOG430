name: CI Pipeline

on:
  push:
  pull_request:

jobs:
  lint:
    name: Lint Java code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Checkstyle
        run: |
          wget -O checkstyle.jar https://github.com/checkstyle/checkstyle/releases/download/checkstyle-10.12.3/checkstyle-10.12.3-all.jar
          curl -L -o google_checks.xml https://raw.githubusercontent.com/checkstyle/checkstyle/checkstyle-10.12.3/src/main/resources/google_checks.xml

      - name: Run Checkstyle
        run: |
          java -jar checkstyle.jar -c google_checks.xml $(find . -name "*.java")

  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests
        run: mvn test

  build:
    name: Build application
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean package

      - name: Build Docker image
        run: docker build -t lab5-api .

  push-to-dockerhub:
    name: Push image to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "mdyoucef00" --password-stdin

      - name: Build and tag image
        run: |
          docker build -t docker.io/mdyoucef00/lab5-api:latest .

      - name: Push image
        run: |
          docker push docker.io/mdyoucef00/lab5-api:latest
