version: '3.8'

services:
  db:
    image: postgres:16
    container_name: lab5_postgres
    environment:
      POSTGRES_DB: magasin
      POSTGRES_USER: magasin_user
      POSTGRES_PASSWORD: magasinpswd
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/local_backup.sql:/docker-entrypoint-initdb.d/local_backup.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U magasin_user -d magasin"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: lab5_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/magasin
      SPRING_DATASOURCE_USERNAME: magasin_user
      SPRING_DATASOURCE_PASSWORD: magasinpswd
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
    ports:
      - "8080:8080"

  prometheus:
    image: prom/prometheus:latest
    container_name: lab5_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: lab5_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources

volumes:
  db_data:
  prometheus_data:
  grafana_data: 